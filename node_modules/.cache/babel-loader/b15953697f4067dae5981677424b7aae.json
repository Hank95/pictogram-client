{"ast":null,"code":"var _jsxFileName = \"/Users/Henry1/Development/code/Mod2/pictogram-client/src/Components/PictureCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport Heart from \"react-animated-heart\"; // import LikeButton from \"./LikeButton\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PictureCard = post => {\n  _s();\n\n  const [isClick, setClick] = useState(false);\n  const [count, setCount] = useState(0); // function handleClick() {\n  //   setCount(count + 1);\n  //   setClick(!isClick);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"Card\",\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      src: post.post.image,\n      wrapped: true,\n      ui: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n      className: \"CardContent\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: post.post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n        children: post.post.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n        children: post.post.datePosted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Appz\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"Counter\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heart, {\n          className: \"Heart\",\n          isClick: isClick,\n          onClick: isClick ? setCount(count + 1) : setCount(count - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PictureCard, \"PDFTSwTH5E0YouJ6uJCkyB/pWSg=\");\n\n_c = PictureCard;\nexport default PictureCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PictureCard\");","map":{"version":3,"sources":["/Users/Henry1/Development/code/Mod2/pictogram-client/src/Components/PictureCard.js"],"names":["React","useState","Card","Image","Heart","PictureCard","post","isClick","setClick","count","setCount","image","title","author","datePosted"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,sBAAlB,C,CAEA;;;;AAEA,MAAMC,WAAW,GAAIC,IAAD,IAAU;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC,CAF4B,CAI5B;AACA;AACA;AACA;;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEK,IAAI,CAACA,IAAL,CAAUK,KAAtB;AAA6B,MAAA,OAAO,MAApC;AAAqC,MAAA,EAAE,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD,CAAM,OAAN;AAAc,MAAA,SAAS,EAAC,aAAxB;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAA,kBAAcL,IAAI,CAACA,IAAL,CAAUM;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,kBAAYN,IAAI,CAACA,IAAL,CAAUO;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD,CAAM,IAAN;AAAA,kBAAYP,IAAI,CAACA,IAAL,CAAUQ;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA,oBAAwBL;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,SAAS,EAAC,OADZ;AAEE,UAAA,OAAO,EAAEF,OAFX;AAGE,UAAA,OAAO,EAAEA,OAAO,GAAGG,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAX,GAAyBC,QAAQ,CAACD,KAAK,GAAG,CAAT;AAHnD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3BD;;GAAMJ,W;;KAAAA,W;AA6BN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\nimport Heart from \"react-animated-heart\";\n\n// import LikeButton from \"./LikeButton\";\n\nconst PictureCard = (post) => {\n  const [isClick, setClick] = useState(false);\n  const [count, setCount] = useState(0);\n\n  // function handleClick() {\n  //   setCount(count + 1);\n  //   setClick(!isClick);\n  // }\n\n  return (\n    <Card className=\"Card\">\n      <Image src={post.post.image} wrapped ui={false} />\n      <Card.Content className=\"CardContent\">\n        <Card.Header>{post.post.title}</Card.Header>\n        <Card.Meta>{post.post.author}</Card.Meta>\n        <Card.Meta>{post.post.datePosted}</Card.Meta>\n        <div className=\"Appz\">\n          <p className=\"Counter\">{count}</p>\n          <Heart\n            className=\"Heart\"\n            isClick={isClick}\n            onClick={isClick ? setCount(count + 1) : setCount(count - 1)}\n          />\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default PictureCard;\n"]},"metadata":{},"sourceType":"module"}